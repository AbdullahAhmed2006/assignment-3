import java.util.Random;
import java.util.Scanner;

class CricketScorecard {
    static Scanner sc = new Scanner(System.in);
    static Random random = new Random();

    static final int MAX_OVERS = 20;
    static final int MAX_PLAYERS = 11;

    static String team1, team2;
    static String[] team1Players = new String[MAX_PLAYERS];
    static String[] team2Players = new String[MAX_PLAYERS];
    static int[] team1Scores = new int[MAX_PLAYERS];
    static int[] team2Scores = new int[MAX_PLAYERS];
    static int[] team1Balls = new int[MAX_PLAYERS];
    static int[] team2Balls = new int[MAX_PLAYERS];
    static boolean[] team1Out = new boolean[MAX_PLAYERS];
    static boolean[] team2Out = new boolean[MAX_PLAYERS];

    static int team1TotalRuns = 0, team2TotalRuns = 0;
    static int team1Wickets = 0, team2Wickets = 0;

    public static void main(String[] args) {
        inputTeamNames();
        inputPlayers();
        int tossResult = toss();
        if (tossResult == 0) {
            System.out.println(team1 + " won the toss and will bat first.");
            simulateInnings(team1, team1Players, team1Scores, team1Balls, team1Out);
            simulateInnings(team2, team2Players, team2Scores, team2Balls, team2Out);
        } else {
            System.out.println(team2 + " won the toss and will bat first.");
            simulateInnings(team2, team2Players, team2Scores, team2Balls, team2Out);
            simulateInnings(team1, team1Players, team1Scores, team1Balls, team1Out);
        }
        displayScore();
        determineWinner();
    }

    static void inputTeamNames() {
        System.out.print("Enter the name of Team 1: ");
        team1 = sc.nextLine();
        System.out.print("Enter the name of Team 2: ");
        team2 = sc.nextLine();
    }

    static void inputPlayers() {
        System.out.println("Enter the names of players for " + team1 + ": ");
        for (int i = 0; i < MAX_PLAYERS; i++) {
            System.out.print("Player " + (i + 1) + ": ");
            team1Players[i] = sc.nextLine();
        }
        System.out.println("Enter the names of players for " + team2 + ": ");
        for (int i = 0; i < MAX_PLAYERS; i++) {
            System.out.print("Player " + (i + 1) + ": ");
            team2Players[i] = sc.nextLine();
        }
    }

    static int toss() {
        return random.nextInt(2);
    }

    static void simulateInnings(String teamName, String[] players, int[] scores, int[] balls, boolean[] out) {
        System.out.println(teamName + " is batting now.");
        int totalRuns = 0, wickets = 0;

        for (int over = 0; over < MAX_OVERS; over++) {
            System.out.println("Over " + (over + 1) + ":");
            for (int ball = 0; ball < 6; ball++) {
                if (wickets == MAX_PLAYERS - 1) {
                    System.out.println("All out!");
                    break;
                }
                int runs = random.nextInt(7); // Runs between 0 and 6
                if (runs == 5) runs = 0; // 5 runs are not common, treating as 0
                totalRuns += runs;
                scores[wickets] += runs;
                balls[wickets]++;
                System.out.println("Ball " + (ball + 1) + ": " + runs + " runs");
                if (random.nextInt(10) < 2) { // 20% chance of getting out
                    System.out.println(players[wickets] + " is out!");
                    out[wickets] = true;
                    wickets++;
                }
            }
            if (wickets == MAX_PLAYERS - 1) break;
        }

        System.out.println("Innings complete!");
        if (teamName.equals(team1)) {
            team1TotalRuns = totalRuns;
            team1Wickets = wickets;
        } else {
            team2TotalRuns = totalRuns;
            team2Wickets = wickets;
        }
    }

    static void displayScore() {
        System.out.println("\nScorecard for " + team1 + ":");
        displayTeamScore(team1Players, team1Scores, team1Balls, team1Out, team1TotalRuns, team1Wickets);

        System.out.println("\nScorecard for " + team2 + ":");
        displayTeamScore(team2Players, team2Scores, team2Balls, team2Out, team2TotalRuns, team2Wickets);
    }

    static void displayTeamScore(String[] players, int[] scores, int[] balls, boolean[] out, int totalRuns, int wickets) {
        for (int i = 0; i < MAX_PLAYERS; i++) {
            String status = out[i] ? "Out" : "Not Out";
            double strikeRate = balls[i] == 0 ? 0.0 : (scores[i] / (double) balls[i]) * 100;
            System.out.printf("%s - %d runs, %d balls, %s, Strike rate: %.2f\n", players[i], scores[i], balls[i], status, strikeRate);
        }
        System.out.printf("Total score: %d/%d in %d overs\n", totalRuns, wickets, MAX_OVERS);
    }

    static void determineWinner() {
        System.out.println("\nMatch Result:");
        if (team1TotalRuns > team2TotalRuns) {
            System.out.println(team1 + " wins by " + (team1TotalRuns - team2TotalRuns) + " runs!");
        } else if (team2TotalRuns > team1TotalRuns) {
            System.out.println(team2 + " wins by " + (MAX_PLAYERS - team2Wickets - 1) + " wickets!");
        } else {
            System.out.println("The match is a tie!");
        }
    }
}